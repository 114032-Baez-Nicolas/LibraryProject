// <auto-generated />
using System;
using CodeFirstLibraryDb.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeFirstLibraryDb.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    partial class LibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CodeFirstLibraryDb.Models.Autor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Autores");

                    b.HasData(
                        new
                        {
                            id = 1,
                            FechaNacimiento = new DateTime(1927, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Gabriel García Márquez"
                        },
                        new
                        {
                            id = 2,
                            FechaNacimiento = new DateTime(1914, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Julio Cortázar"
                        },
                        new
                        {
                            id = 3,
                            FechaNacimiento = new DateTime(1936, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Mario Vargas Llosa"
                        });
                });

            modelBuilder.Entity("CodeFirstLibraryDb.Models.Genero", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Generos");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Nombre = "Realismo Mágico"
                        },
                        new
                        {
                            id = 2,
                            Nombre = "Novela"
                        },
                        new
                        {
                            id = 3,
                            Nombre = "Cuento"
                        });
                });

            modelBuilder.Entity("CodeFirstLibraryDb.Models.Libro", b =>
                {
                    b.Property<Guid>("ISBN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("lAutorId")
                        .HasColumnType("int");

                    b.Property<int>("lGeneroId")
                        .HasColumnType("int");

                    b.HasKey("ISBN");

                    b.HasIndex("lAutorId");

                    b.HasIndex("lGeneroId");

                    b.ToTable("Libros");

                    b.HasData(
                        new
                        {
                            ISBN = new Guid("dca0330b-d89d-438d-bd2f-f12ba1af29c8"),
                            FechaPublicacion = new DateTime(1967, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Titulo = "Cien años de soledad",
                            lAutorId = 1,
                            lGeneroId = 1
                        },
                        new
                        {
                            ISBN = new Guid("19fc2475-4684-4d16-ae52-e2b4c06e2865"),
                            FechaPublicacion = new DateTime(1963, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Titulo = "Rayuela",
                            lAutorId = 2,
                            lGeneroId = 2
                        },
                        new
                        {
                            ISBN = new Guid("1822d238-4774-4643-83d4-55efb415646a"),
                            FechaPublicacion = new DateTime(1963, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Titulo = "La ciudad y los perros",
                            lAutorId = 3,
                            lGeneroId = 3
                        });
                });

            modelBuilder.Entity("CodeFirstLibraryDb.Models.Libro", b =>
                {
                    b.HasOne("CodeFirstLibraryDb.Models.Autor", "IdAutorNavegation")
                        .WithMany("Libros")
                        .HasForeignKey("lAutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeFirstLibraryDb.Models.Genero", "IdGeneroNavegation")
                        .WithMany("Libros")
                        .HasForeignKey("lGeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdAutorNavegation");

                    b.Navigation("IdGeneroNavegation");
                });

            modelBuilder.Entity("CodeFirstLibraryDb.Models.Autor", b =>
                {
                    b.Navigation("Libros");
                });

            modelBuilder.Entity("CodeFirstLibraryDb.Models.Genero", b =>
                {
                    b.Navigation("Libros");
                });
#pragma warning restore 612, 618
        }
    }
}
